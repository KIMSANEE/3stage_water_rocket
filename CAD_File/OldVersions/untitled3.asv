clear all; clc; 
delete(instrfindall);
s=serial('COM18');
set(s, 'BaudRate', 115200);
s.InputBufferSize = 100000;

fopen(s);

pause(10);


number=1;
distance=14;
standard=140;
valocity=1.0;

array=[];

if number~=1 && number~=2 && number~=3
    disp('number is not equal to 1, 2, or 3')
else 
    if standard >150 || standard <100
        disp('please insert standard less than 250mm/over than 100mm')
    else
        if valocity >1.2 || valocity<0
            disp('please insert velocity less than 1.2cm/s/over than 0')
        else
            if mod(standard,distance) ~= 0
                disp('please check standard and distance')
            else
                disp('stanrd and distance correct')
                array(1,4)=distance;
            end
            disp('valocity is inserted')
            array(1,3)=valocity;
        end
        disp('standard is inserted')
        array(1,2)=standard;
    end
    disp('number is inserted')
    array(1,1)=number;
    array(1,5)=1;
end

fprintf(s, '%d %d %f %d %d', array);

fprintf(s,'b');

pause(10);

fprintf(s,'c');

time = ((standard/distance)+1)*((standard/distance)+1)*(0.5+distance/(valocity*100));

pause(time);

out = fscanf(s);

rows = standard/distance;
cols = standard/distance;

[X,Y] = meshgrid(-rows/2:1:rows/2,-rows/2:1:rows/2);

pause(1);
z=jsondecode(out).value; 
Z=reshape(z,rows+1,cols+1);
Z_=Z.';

for i=1:rows+1
if mod(i,2)==0
Z__(i, :)=fliplr(Z_(i, :));
else
Z__(i, :) = Z_(i, :);
end
end

surf(X,Y,Z__)

fclose(s);

 

